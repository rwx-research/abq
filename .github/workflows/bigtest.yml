name: Bigtest

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'ABQ version to test'
        required: true
        type: string

  workflow_call:
    inputs:
      version:
        description: 'ABQ version to test'
        required: true
        type: string
    secrets:
      ABQ_CREATE_MANUAL_ACCESS_TOKEN:
        required: true
      AWS_S3_ABQ_RELEASES_STAGING_ACCESS_KEY_ID:
        required: true
      AWS_S3_ABQ_RELEASES_STAGING_SECRET_ACCESS_KEY:
        required: true

jobs:
  bigtest:
    runs-on: rwx-ubuntu-latest
    env:
      AWS_DEFAULT_REGION: us-east-2
      AWS_DEFAULT_OUTPUT: json
      ABQ_CREATE_MANUAL_ACCESS_TOKEN: ${{ secrets.ABQ_CREATE_MANUAL_ACCESS_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'bigtest/**/package-lock.json'

      - name: Load testdata
        run: |
          scripts/init_bigtest

      - name: Pull down abq binary to test
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_S3_ABQ_RELEASES_STAGING_ACCESS_KEY_ID }} --profile staging
          aws configure set aws_secret_access_key ${{ secrets.AWS_S3_ABQ_RELEASES_STAGING_SECRET_ACCESS_KEY }} --profile staging

          ABQ_BIN="$PWD/abq-bin"
          mkdir -p "$ABQ_BIN"

          aws s3 cp "s3://abq-releases-staging/abq/${{ inputs.version }}/linux/x86_64/abq" "$ABQ_BIN/abq" --profile staging

          chmod 755 "$ABQ_BIN/abq"

          echo "$ABQ_BIN" >> "$GITHUB_PATH"

      - name: START dev queue
        run: |
          bin/manage_dev_queue start ${{ inputs.version }}

      - name: BIGTEST benchmarks
        id: benchmark
        run: |
          EXIT=0

          # RSPEC
          node bigtest/benchmark_rspec/bench.js || EXIT=$?
          source bigtest/benchmark_rspec/out/exports
          {
          echo "rspec_abq_worker_time=$ABQ_WORKER_TIME"
          echo "rspec_raw_time=$RAW_TIME"
          echo "rspec_abq_worker_overhead=$ABQ_WORKER_OVERHEAD"
          } >> "$GITHUB_OUTPUT"

          # JEST
          node bigtest/benchmark_jest/bench.js || EXIT=$?
          source bigtest/benchmark_jest/out/exports
          {
          echo "jest_abq_worker_time=$ABQ_WORKER_TIME"
          echo "jest_raw_time=$RAW_TIME"
          echo "jest_abq_worker_overhead=$ABQ_WORKER_OVERHEAD"
          } >> "$GITHUB_OUTPUT"

          exit $EXIT

      - name: BIGTEST fuzz test result sizes
        id: fuzz_result_sizes
        run: |
          bigtest/fuzz_result_sizes/test.sh

      - name: Get status emoji
        id: status
        if: always()
        run: |
          EMOJI="${{ (steps.benchmark.conclusion == 'success' && steps.fuzz_result_sizes.conclusion == 'success') && ':white_check_mark:' || ':x:' }}"
          echo "emoji=$EMOJI" >> "$GITHUB_OUTPUT"

      - name: Get associated PR
        uses: 8BitJonny/gh-get-current-pr@f4d16fd424adba1334de83b538f6cac7529d4683 # v2.2.0, locking to a ref to avoid supply chain attacks
        id: pr
        if: always() && github.ref != 'refs/heads/main'

      - name: Report bigtest
        uses: thollander/actions-comment-pull-request@632cf9ce90574d125be56b5f3405cda41a84e2fd # v2.3.1, locking to a ref to avoid supply chain attacks
        if: always() && github.ref != 'refs/heads/main'
        with:
          pr_number: ${{ steps.pr.outputs.number }}
          message: |
            ${{ steps.status.outputs.emoji }} **Bigtest for ${{ github.sha }}** ([run](https://github.com/rwx-research/abq/actions/runs/${{ github.run_id }}))

            Benchmarks:
              - RSpec: ${{ steps.benchmark.outputs.rspec_abq_worker_overhead }}% worker overhead
                - RSpec time: ${{ steps.benchmark.outputs.rspec_raw_time }} seconds
                - ABQ worker time: ${{ steps.benchmark.outputs.rspec_abq_worker_time }} seconds
              - Jest: ${{ steps.benchmark.outputs.jest_abq_worker_overhead }}% worker overhead
                - Jest time: ${{ steps.benchmark.outputs.jest_raw_time }} seconds
                - ABQ worker time: ${{ steps.benchmark.outputs.jest_abq_worker_time }} seconds

            Fuzz result sizes:
              - PASSED

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: STOP dev queue
        if: always()
        run: |
          bin/manage_dev_queue stop
