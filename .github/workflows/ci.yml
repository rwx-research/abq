name: CI

on:
  - push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fmt:
    name: Source formatting check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          # Keep up-to-date with rust-toolchain.toml until https://github.com/actions-rs/toolchain/pull/209 lands.
          toolchain: 1.62.1
          override: true
          components: rustfmt

      - name: Check formatting
        uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: -- --check

  test:
    name: Lint, test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Restore cargo cache
        uses: actions/cache@v3.0.8
        env:
          cache-name: ci
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ hashFiles('Cargo.lock') }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          # Keep up-to-date with rust-toolchain.toml until https://github.com/actions-rs/toolchain/pull/209 lands.
          toolchain: 1.62.1
          override: true
          components: clippy

      - name: Run lints
        uses: actions-rs/cargo@v1.0.3
        with:
          command: clippy
          args: --workspace --tests --release -- --deny warnings

      # setup testdata
      - uses: actions/setup-node@v3
        with:
          node-version: "14"
          cache: "npm"
          cache-dependency-path: "testdata/**/package-lock.json"

      - name: Pull native test runners
        run: |
          eval `ssh-agent -s`

          echo "${{secrets.SSH_KEY_ABQ_JEST}}" | ssh-add -
          git submodule update --init -- native-runners/abq-jest

          eval `ssh-agent -k`

      - name: Load test dependencies
        run: |
          scripts/init_testdata

      # End setup testdata

      - name: Dogfood abq
        run: |
          make dogfood

      - name: Upload artifacts to captain
        uses: rwx-research/upload-captain-artifact@main
        with:
          artifacts: |
            [
              {
                "name": "test",
                "path": "abq-test-results.xml",
                "kind": "test_results",
                "parser": "junit_xml"
              }
            ]
          job-name: "Lint, test"
          job-matrix: "${{ toJSON(matrix) }}"
          captain-token: "${{ secrets.VANGUARD_PRODUCTION_RWX_TOKEN }}"

      - name: Run tests with cargo
        run: |
          cargo test --features test-abq-jest

  test-tls:
    name: Test (TLS)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Restore cargo cache
        uses: actions/cache@v3.0.8
        env:
          cache-name: ci
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ hashFiles('Cargo.lock') }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          # Keep up-to-date with rust-toolchain.toml until https://github.com/actions-rs/toolchain/pull/209 lands.
          toolchain: 1.62.1
          override: true
          components: clippy

      # setup testdata
      - uses: actions/setup-node@v3
        with:
          node-version: "14"
          cache: "npm"
          cache-dependency-path: "testdata/**/package-lock.json"

      - name: Pull native test runners
        run: |
          eval `ssh-agent -s`

          echo "${{secrets.SSH_KEY_ABQ_JEST}}" | ssh-add -
          git submodule update --init -- native-runners/abq-jest

          eval `ssh-agent -k`

      - name: Load test dependencies
        run: |
          scripts/init_testdata

      # End setup testdata

      - name: Run tests with cargo
        run: |
          cargo test --features tls,test-abq-jest

      - name: Dogfood abq
        run: |
          make dogfood

      - name: Upload artifacts to captain
        uses: rwx-research/upload-captain-artifact@main
        with:
          artifacts: |
            [
              {
                "name": "test",
                "path": "abq-tls-test-results.xml",
                "kind": "test_results",
                "parser": "junit_xml"
              }
            ]
          job-name: "Test (TLS)"
          job-matrix: "${{ toJSON(matrix) }}"
          captain-token: "${{ secrets.VANGUARD_PRODUCTION_RWX_TOKEN }}"

  deploy-main:
    name: Deploy abq
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: test
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy abq
        run: flyctl deploy --remote-only

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Restore cargo cache
        uses: actions/cache@v3.0.8
        env:
          cache-name: ci
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ hashFiles('Cargo.lock') }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          # Keep up-to-date with rust-toolchain.toml until https://github.com/actions-rs/toolchain/pull/209 lands.
          toolchain: 1.62.1
          override: true

      - name: Build release
        run: cargo build --release

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: ABQ Nightly
          tag_name: init
          prerelease: true
          body: ""
          fail_on_unmatched_files: true
          files: |
            target/release/abq
            target/release/abq_cargo
            target/release/abq_worker_harness
