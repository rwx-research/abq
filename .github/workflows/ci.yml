name: CI

on:
  - push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fmt:
    name: Source formatting check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1.64.0
        with:
          components: rustfmt

      - name: Check formatting
        uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: -- --check

  test:
    name: Lint, test
    runs-on: ubuntu-latest
    outputs:
      abq_version: ${{ steps.abq_version.outputs.abq_version }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # get whole history for versioning

      # this may not be unecessary when https://github.com/actions/checkout/issues/882 is resolved
      - name: re-fetch overwritten tag
        run: git fetch --tags --force

      - name: Restore cargo cache
        uses: actions/cache@v3
        env:
          cache-name: ci
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: cargo-${{ hashFiles('rust-toolchain.toml')}}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            cargo-${{ hashFiles('rust-toolchain.toml')}}-
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1.64.0
        with:
          components: clippy

      - name: Run lints
        uses: actions-rs/cargo@v1.0.3
        with:
          command: clippy
          args: --workspace --tests --release -- --deny warnings

      # setup testdata
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: 'npm'
          cache-dependency-path: 'testdata/**/package-lock.json'

      - name: Pull native test runners
        run: |
          eval `ssh-agent -s`

          echo "${{secrets.SSH_KEY_ABQ_JEST}}" | ssh-add -
          git submodule update --init -- native-runners/abq-jest

          eval `ssh-agent -k`

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
        shell: bash
        working-directory: native-runners/abq-jest
      - name: Restore yarn cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('native-runners/abq-jest/yarn.lock', '.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-

      - name: Load test dependencies
        run: |
          scripts/init_testdata

      # End setup testdata

      - name: Run tests with cargo
        timeout-minutes: 10
        if: github.run_attempt == 1
        run: |
          cargo test --all-features
        env:
          CI: false

      - name: Run retried tests with cargo, including debug output
        timeout-minutes: 5
        if: github.run_attempt > 1
        run: |
          export ABQ_DEBUG_CLI_TESTS_FOR_CI=1
          cargo test --all-features -- --nocapture
        env:
          CI: false

      - name: export abq version
        id: abq_version
        run: |
          echo "abq_version=$ABQ_VERSION" >> $GITHUB_OUTPUT

  release_unstable:
    name: Release new abq to API
    needs: test
    if: github.ref == 'refs/heads/main'
    uses: ./.github/workflows/build_and_upload.yml
    with:
      ref: ${{ github.ref }}
      release_channel: (contains(needs.test.outputs.abq_version, '-') && "latest") || "v1"
    secrets: inherit
