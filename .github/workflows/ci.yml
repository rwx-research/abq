name: CI

on:
  - push

jobs:
  fmt:
    name: Source formatting check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: Check formatting
        uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: -- --check

  test:
    name: Lint, test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Restore cargo cache
        uses: actions/cache@v3.0.4
        env:
          cache-name: ci
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
          key: ${{ hashFiles('Cargo.lock') }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: Install cargo2junit
        uses: actions-rs/install@v0.1
        with:
          crate: cargo2junit
          version: latest

      - name: Run lints
        uses: actions-rs/cargo@v1.0.3
        with:
          command: clippy
          args: -- -D warnings

      # setup testdata
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: 'npm'
          cache-dependency-path: 'testdata/**/package-lock.json'

      - name: Pull native test runners
        run: |
          eval `ssh-agent -s`

          echo "${{secrets.SSH_KEY_ABQ_JEST}}" | ssh-add -
          git submodule update --init -- native-runners/abq-jest

          eval `ssh-agent -k`

      - name: Load test dependencies
        run: |
            scripts/init_testdata

      # End setup testdata

      - name: Run tests
        uses: actions-rs/cargo@v1.0.3
        with:
          command: test
          args: --all-features

      - name: Write test XML output
        run: |
            cargo test --all-features -- -Z unstable-options --format json --report-time \
              | cargo2junit > cargo-tests.xml

      - name: Upload artifacts to vanguard production
        uses: rwx-research/upload-vanguard-artifact@main
        with:
          artifacts: |
            [
              {
                "name": "test",
                "path": "cargo-tests.xml",
                "kind": "test_results"
              }
            ]
          job-name: "Lint, test"
          job-matrix: "${{ toJSON(matrix) }}"
          vanguard-token: "${{ secrets.VANGUARD_PRODUCTION_RWX_TOKEN }}"
